# -*- coding: utf-8 -*-
"""
this module compairing two image feature vectors.

NOTES :     
    
    - feature extractor algortithms genrates data by global_feature_extractor.
    - feature vector generated by many_extractorV2 that save on .pkl files and you should import them on __init__() function.
    - this class madule can compare two vector by three algortims :
        - mean square error
        - strunctured similarity 
        - cosin similarity 

Todo:
    * import features
    * giving single image from other file that import this madule
    * comparing the single image vector with all of feature vectors
    * computing the MSE and SSIM and cosin
"""
import numpy as np
import pickle as pkl 
from skimage.measure import compare_ssim as ssim
from sklearn.metrics.pairwise import cosine_similarity
import pandas as pd


class Compare:
    def __init__(self,data_file='data.pkl'):
        self.image_size = tuple((500, 500))
        with open(data_file,'rb') as f :
            self.dataList = pkl.load(f)
        self.ssim_all = {'shape':[] ,'texture':[] , 'color':[] }
        self.data = pd.DataFrame(self.dataList)

    def mse_compare(self,vector1,vector2):
        mse = np.square(np.subtract(vector1, vector2)).mean()
        return mse
    
    def ssim_compare(self,vector1,vector2):
        ssim_compare = ssim(vector1,vector2)
        return ssim_compare

    # compare(ssim,shape,sift,orb)
    def compare(self,single_feature_table,*features):
        for feature in features:
            vector1 = single_feature_table[feature]
            # print(vector1)
            for vector2,p_id  in zip(self.data[feature],self.data['product_id']):
                # print(vector2)
                ssim_res = self.ssim_compare(vector1,vector2)
                self.ssim_all[feature].append((p_id,ssim_res))

        return self.ssim_all
            

    def cosin_compare(self):
        pass
    def save_pkl(self):
        pass