
"""
this module create feature vectors of dataset.

NOTES :     
    
    - feature extractor algortithms genrates data by global_feature_extractor.
    - feature vector generated by extractor function.
    - this class madule can 

Todo:
        - create vector with single image with img2vector function.
        - create list of vectors and image paths from our dataset 
        - save all features on .pkl files.
"""


# libraris 
import numpy as np
import cv2
import global_feature_extractor as fe
import pickle as pkl
import pandas as pd



class FeatureExtractor:
    def __str__():
        pass
    def __init__(self,csv_path ):
        self.image_size = tuple((500, 500))
        self.features = []
        self.image_path_list = []
        self.mse_all = []
        self.labels = []
        #object of feature extractor
        self.fe_obj = fe.Global_feature_extraction()
        #self.dir_path = dir_path
        self.csv_path = csv_path
        self.data = pd.read_csv(csv_path,index_col=0)
#        self.lables = os.listdir(dir_path)
#        self.lables.sort()
        
    def img2vector(self,image_path):
        
        Image = cv2.imread(image_path)
        Image = cv2.resize(Image,self.image_size)
        shape = self.fe_obj.shape(Image)
        texture   = self.fe_obj.texture(Image)
        color  = self.fe_obj.color(Image)
        global_feature = np.hstack([color, texture, shape])
        return global_feature
        
#    def dir_extractor(self):
#        # loop over all the labels in the folder
#        count = 1
#        features = []
#        labels = []
#        image_path_list = []
#        for i, label in enumerate(self.lables):
#            cur_path = self.dir_path + "/" + label
#            count = 1
#            for image_path in glob.glob(cur_path + "/*.jpg"):
#                global_feature = self.img2vector(image_path)
#                features.append(global_feature)
#                labels.append(label)
#                image_path_list.append(image_path)
#                print("[INFO] processed - " + str(count))
#                count += 1
#        print("[INFO] completed label - " + label)
#        return features,labels,image_path_list

    def csv_extractor(self):
        features = []
        for img_path in self.data['image_path']:
            global_feature = self.img2vector(img_path)
            features.append(global_feature)
        self.data['feature_vector']= features
        return self.data


    def save(self):
        self.csv_extractor()
        with open(self.csv_path,'wb') as f:
            pkl.dump(self.data,f)

    